{"ast":null,"code":"import _regeneratorRuntime from \"/home/gunwoo/web3-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/gunwoo/web3-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/gunwoo/web3-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gunwoo/web3-practice/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport Web3 from 'web3';\nimport React from \"react\";\n\nfunction App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      web3 = _useState2[0],\n      setWeb3 = _useState2[1];\n\n  useEffect(function () {\n    if (typeof window.ethereum !== \"undefined\") {\n      // window.ethereum이 있다면\n      try {\n        var web = new Web3(window.ethereum); // 새로운 web3 객체를 만든다\n\n        setWeb3(web);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, []);\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      account = _useState4[0],\n      setAccount = _useState4[1]; // ...\n\n\n  var connectWallet = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return window.ethereum.request({\n                method: \"eth_requestAccounts\"\n              });\n\n            case 2:\n              accounts = _context.sent;\n              setAccount(accounts[0]);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function connectWallet() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }\n  }, \"src/App.js\"), \" and save to reload.\"), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Learn React\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"metaConnect\",\n    onClick: function onClick() {\n      connectWallet();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"connect to MetaMask\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"\\uC8FC\\uC18C: \", account), \"  // \\uC5F0\\uACB0\\uB41C \\uACC4\\uC815 \\uC8FC\\uC18C\\uB97C \\uD654\\uBA74\\uC5D0 \\uCD9C\\uB825\\uD569\\uB2C8\\uB2E4\");\n}\n\nexport default App;","map":{"version":3,"sources":["/home/gunwoo/web3-practice/src/App.js"],"names":["useState","useEffect","Web3","React","App","web3","setWeb3","window","ethereum","web","err","console","log","account","setAccount","connectWallet","request","method","accounts","logo"],"mappings":";;;;;AACA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA,kBAEWJ,QAAQ,EAFnB;AAAA;AAAA,MAENK,IAFM;AAAA,MAEAC,OAFA;;AAGXL,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,OAAOM,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAAE;AAC1C,UAAI;AACA,YAAMC,GAAG,GAAG,IAAIP,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAAZ,CADA,CACwC;;AACxCF,QAAAA,OAAO,CAACG,GAAD,CAAP;AACH,OAHD,CAGE,OAAOC,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;AACJ,GATQ,EASN,EATM,CAAT;;AAHW,mBAciBV,QAAQ,CAAC,EAAD,CAdzB;AAAA;AAAA,MAcNa,OAdM;AAAA,MAcGC,UAdH,kBAed;;;AAEC,MAAMC,aAAa;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGR,MAAM,CAACC,QAAP,CAAgBQ,OAAhB,CAAwB;AAC3CC,gBAAAA,MAAM,EAAE;AADmC,eAAxB,CADH;;AAAA;AACdC,cAAAA,QADc;AAKpBJ,cAAAA,UAAU,CAACI,QAAQ,CAAC,CAAD,CAAT,CAAV;;AALoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbH,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEI,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,yBAFF,eAKE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,IAAI,EAAC,qBAFP;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CADF,eAgBE;AACU,IAAA,SAAS,EAAC,aADpB;AAEU,IAAA,OAAO,EAAE,mBAAM;AACXJ,MAAAA,aAAa;AAChB,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAhBF,eAwBQ;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA+BF,OAA/B,CAxBR,8GADF;AA6BD;;AAID,eAAeT,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport Web3 from 'web3';\nimport React from \"react\"\n\nfunction App() {\n\n  const [web3, setWeb3] = useState();\n    useEffect(() => {\n        if (typeof window.ethereum !== \"undefined\") { // window.ethereum이 있다면\n            try {\n                const web = new Web3(window.ethereum);  // 새로운 web3 객체를 만든다\n                setWeb3(web);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    }, []);\n\n  const [account, setAccount] = useState('');\n\t// ...\n  \n  const connectWallet = async () => {\n    const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n         });\n\n    setAccount(accounts[0]);\n};\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n\n      <button\n                className=\"metaConnect\"\n                onClick={() => {\n                    connectWallet();\n                }}\n            >\n                connect to MetaMask\n            </button>\n            <div className=\"userInfo\">주소: {account}</div>  // 연결된 계정 주소를 화면에 출력합니다\n\n    </div>\n  );\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}