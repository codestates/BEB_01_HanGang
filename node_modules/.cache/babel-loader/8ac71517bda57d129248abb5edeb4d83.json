{"ast":null,"code":"import _objectSpread from \"/home/gunwoo/web3-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/gunwoo/web3-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  var _useContext = useContext(AccordionContext),\n      activeEventKey = _useContext.activeEventKey,\n      onSelect = _useContext.onSelect;\n\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      onClick = _ref.onClick,\n      props = _objectWithoutProperties(_ref, [\"as\", \"bsPrefix\", \"className\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n\n  var _useContext2 = useContext(AccordionItemContext),\n      eventKey = _useContext2.eventKey;\n\n  var accordionOnClick = useAccordionButton(eventKey, onClick);\n\n  var _useContext3 = useContext(AccordionContext),\n      activeEventKey = _useContext3.activeEventKey;\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, _objectSpread({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props, {\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, eventKey !== activeEventKey && 'collapsed')\n  }));\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","map":null,"metadata":{},"sourceType":"module"}