{"ast":null,"code":"import SturdyWebSocket from \"sturdy-websocket\";\nimport { w3cwebsocket } from \"websocket\";\nimport { makePayloadFactory, makeSenders } from \"../util/jsonRpc\";\nimport { VERSION } from \"../version\";\nimport { makeHttpSender } from \"./alchemySendHttp\";\nimport { makeWebSocketSender } from \"./alchemySendWebSocket\";\nimport { makeAlchemyHttpProvider } from \"./httpProvider\";\nimport { makePayloadSender } from \"./sendPayload\";\nimport { AlchemyWebSocketProvider } from \"./webSocketProvider\";\nvar NODE_MAX_WS_FRAME_SIZE = 100 * 1024 * 1024; // 100 MB\n\nexport function makeAlchemyContext(url, config) {\n  var makePayload = makePayloadFactory();\n\n  if (/^https?:\\/\\//.test(url)) {\n    var alchemySend = makeHttpSender(url);\n\n    var _a = makePayloadSender(alchemySend, config),\n        sendPayload = _a.sendPayload,\n        setWriteProvider = _a.setWriteProvider;\n\n    var senders = makeSenders(sendPayload, makePayload);\n    var provider = makeAlchemyHttpProvider(sendPayload);\n    return {\n      provider: provider,\n      senders: senders,\n      setWriteProvider: setWriteProvider\n    };\n  } else if (/^wss?:\\/\\//.test(url)) {\n    var protocol = isAlchemyUrl(url) ? \"alchemy-web3-\" + VERSION : undefined;\n    var ws = new SturdyWebSocket(url, protocol, {\n      wsConstructor: getWebSocketConstructor()\n    });\n    var alchemySend = makeWebSocketSender(ws);\n\n    var _b = makePayloadSender(alchemySend, config),\n        sendPayload = _b.sendPayload,\n        setWriteProvider = _b.setWriteProvider;\n\n    var senders = makeSenders(sendPayload, makePayload);\n    var provider = new AlchemyWebSocketProvider(ws, sendPayload, senders);\n    return {\n      provider: provider,\n      senders: senders,\n      setWriteProvider: setWriteProvider\n    };\n  } else {\n    throw new Error(\"Alchemy URL protocol must be one of http, https, ws, or wss. Recieved: \" + url);\n  }\n}\n\nfunction getWebSocketConstructor() {\n  return isNodeEnvironment() ? function (url, protocols) {\n    return new w3cwebsocket(url, protocols, undefined, undefined, undefined, {\n      maxReceivedMessageSize: NODE_MAX_WS_FRAME_SIZE,\n      maxReceivedFrameSize: NODE_MAX_WS_FRAME_SIZE\n    });\n  } : WebSocket;\n}\n\nfunction isNodeEnvironment() {\n  return typeof process !== \"undefined\" && process != null && process.versions != null && process.versions.node != null;\n}\n\nfunction isAlchemyUrl(url) {\n  return url.indexOf(\"alchemyapi.io\") >= 0;\n}","map":null,"metadata":{},"sourceType":"module"}