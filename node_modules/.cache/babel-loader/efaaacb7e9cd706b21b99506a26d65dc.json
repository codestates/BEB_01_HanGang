{"ast":null,"code":"var _jsxFileName = \"/home/gunwoo/web3-practice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport Web3 from 'web3';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [web3, setWeb3] = useState();\n  useEffect(() => {\n    if (typeof window.ethereum !== \"undefined\") {\n      // window.ethereum이 있다면\n      try {\n        const web = new Web3(window.ethereum); // 새로운 web3 객체를 만든다\n\n        setWeb3(web);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, []);\n  const [accounts, setAccount] = useState(''); // ...\n\n  const connectWallet = async () => {\n    accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    setAccount(accounts[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"metaConnect\",\n      onClick: () => {\n        connectWallet();\n      },\n      children: \"connect to MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInfo\",\n      children: [\"\\uC8FC\\uC18C: \", accounts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), \"  // \\uC5F0\\uACB0\\uB41C \\uACC4\\uC815 \\uC8FC\\uC18C\\uB97C \\uD654\\uBA74\\uC5D0 \\uCD9C\\uB825\\uD569\\uB2C8\\uB2E4\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JnsQPmLnszx5IgQFqcSdbgXaeYY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gunwoo/web3-practice/src/App.js"],"names":["logo","useState","useEffect","Web3","React","App","web3","setWeb3","window","ethereum","web","err","console","log","accounts","setAccount","connectWallet","request","method"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACEC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,OAAOM,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAAE;AAC1C,UAAI;AACA,cAAMC,GAAG,GAAG,IAAIP,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAAZ,CADA,CACwC;;AACxCF,QAAAA,OAAO,CAACG,GAAD,CAAP;AACH,OAHD,CAGE,OAAOC,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;AACJ,GATQ,EASN,EATM,CAAT;AAWA,QAAM,CAACG,QAAD,EAAWC,UAAX,IAAyBd,QAAQ,CAAC,EAAD,CAAvC,CAdW,CAed;;AAEA,QAAMe,aAAa,GAAG,YAAY;AAC3BF,IAAAA,QAAQ,GAAG,MAAMN,MAAM,CAACC,QAAP,CAAgBQ,OAAhB,CAAwB;AACrCC,MAAAA,MAAM,EAAE;AAD6B,KAAxB,CAAjB;AAIAH,IAAAA,UAAU,CAACD,QAAQ,CAAC,CAAD,CAAT,CAAV;AACH,GANJ;;AAQC,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEd,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AACU,MAAA,SAAS,EAAC,aADpB;AAEU,MAAA,OAAO,EAAE,MAAM;AACXgB,QAAAA,aAAa;AAChB,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eAwBQ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,mCAA+BF,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAtDQT,G;;KAAAA,G;AA0DT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport { useState, useEffect } from \"react\";\nimport Web3 from 'web3';\n\nimport React from \"react\"\n\nfunction App() {\n\n  const [web3, setWeb3] = useState();\n    useEffect(() => {\n        if (typeof window.ethereum !== \"undefined\") { // window.ethereum이 있다면\n            try {\n                const web = new Web3(window.ethereum);  // 새로운 web3 객체를 만든다\n                setWeb3(web);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    }, []);\n\n    const [accounts, setAccount] = useState('');\n\t// ...\n\n\tconst connectWallet = async () => {\n        accounts = await window.ethereum.request({\n            method: \"eth_requestAccounts\",\n        });\n\n        setAccount(accounts[0]);\n    };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n\n      <button\n                className=\"metaConnect\"\n                onClick={() => {\n                    connectWallet();\n                }}\n            >\n                connect to MetaMask\n            </button>\n            <div className=\"userInfo\">주소: {accounts}</div>  // 연결된 계정 주소를 화면에 출력합니다\n\n    </div>\n  );\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}