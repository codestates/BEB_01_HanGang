{"ast":null,"code":"import _regeneratorRuntime from \"/home/lhk/web3-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/lhk/web3-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/lhk/web3-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/lhk/web3-practice/src/components/Main.js\";\nimport React from 'react';\nimport logo from '../한강.png';\n\nfunction Main() {\n  var _this = this;\n\n  var NFTlist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  var addNewErc721Token = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tokenContract, name, symbol, totalSupply, addr, arr, i, _loop, _i, _arr;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return new web3.eth.Contract(erc721Abi, newErc721addr);\n\n            case 2:\n              tokenContract = _context2.sent;\n              _context2.next = 5;\n              return tokenContract.methods.name().call();\n\n            case 5:\n              name = _context2.sent;\n              _context2.next = 8;\n              return tokenContract.methods.symbol().call();\n\n            case 8:\n              symbol = _context2.sent;\n              _context2.next = 11;\n              return tokenContract.methods.totalSupply().call();\n\n            case 11:\n              totalSupply = _context2.sent;\n              addr = newErc721addr;\n              arr = [];\n\n              for (i = 1; i <= totalSupply; i++) {\n                arr.push(i);\n              }\n\n              _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop() {\n                var tokenId, tokenOwner, tokenURI;\n                return _regeneratorRuntime.wrap(function _loop$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        tokenId = _arr[_i];\n                        _context.next = 3;\n                        return tokenContract.methods.ownerOf(tokenId).call();\n\n                      case 3:\n                        tokenOwner = _context.sent;\n\n                        if (!(String(tokenOwner).toLowerCase() === walletAddress)) {\n                          _context.next = 9;\n                          break;\n                        }\n\n                        _context.next = 7;\n                        return tokenContract.methods.tokenURI(tokenId).call();\n\n                      case 7:\n                        tokenURI = _context.sent;\n                        setErc721list(function (prevState) {\n                          return [].concat(_toConsumableArray(prevState), [{\n                            name: name,\n                            symbol: symbol,\n                            tokenId: tokenId,\n                            tokenURI: tokenURI,\n                            addr: addr\n                          }]);\n                        });\n\n                      case 9:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _loop);\n              });\n              _i = 0, _arr = arr;\n\n            case 17:\n              if (!(_i < _arr.length)) {\n                _context2.next = 22;\n                break;\n              }\n\n              return _context2.delegateYield(_loop(), \"t0\", 19);\n\n            case 19:\n              _i++;\n              _context2.next = 17;\n              break;\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function addNewErc721Token() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, NFTlist.map(function (token) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      className: \"bd-placeholder-img\",\n      width: \"100%\",\n      height: \"250\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      \"aria-label\": \"Placeholder: Image\",\n      preserveAspectRatio: \"xMidYMid slice\",\n      role: \"img\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"card-img-top\",\n      src: logo,\n      alt: \"logo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"card-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, token.Name), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"card-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"\\uC124\\uBA85: \", token.des, \" \\uAC00\\uACA9: \", token.cost), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      class: \"btn btn-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"\\uAD6C\\uB9E4\"))));\n  }))));\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/lhk/web3-practice/src/components/Main.js"],"names":["React","logo","Main","NFTlist","addNewErc721Token","web3","eth","Contract","erc721Abi","newErc721addr","tokenContract","methods","name","call","symbol","totalSupply","addr","arr","i","push","tokenId","ownerOf","tokenOwner","String","toLowerCase","walletAddress","tokenURI","setErc721list","prevState","map","token","Name","des","cost"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from '../한강.png';\n\n\nfunction Main() {\n  let NFTlist = [1,2,3,4,5,6,7,8,9,10]\n\n  const addNewErc721Token = async () => {\n    const tokenContract = await new web3.eth.Contract(\n      erc721Abi,\n      newErc721addr\n    );\n    const name = await tokenContract.methods.name().call();\n    const symbol = await tokenContract.methods.symbol().call();\n    const totalSupply = await tokenContract.methods.totalSupply().call();\n    const addr = newErc721addr;\n\n    let arr = [];\n    for (let i = 1; i <= totalSupply; i++) {\n      arr.push(i);\n    }\n    for (let tokenId of arr) {\n      let tokenOwner = await tokenContract.methods\n        .ownerOf(tokenId)\n        .call();\n      if (String(tokenOwner).toLowerCase() === walletAddress) {\n        let tokenURI = await tokenContract.methods\n          .tokenURI(tokenId)\n          .call();\n        setErc721list((prevState) => {\n          return [...prevState, { name, symbol, tokenId, tokenURI, addr }];\n        });\n      }\n    }\n\n  }\n  return (\n    <div className=\"App\">\n      <div class=\"container\">\n        <div className=\"row no-gutters\">\n          {NFTlist.map((token) => {\n            return (\n              <div className=\"col-3\">\n                <svg\n                  className=\"bd-placeholder-img\"\n                  width=\"100%\"\n                  height=\"250\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  aria-label=\"Placeholder: Image\"\n                  preserveAspectRatio=\"xMidYMid slice\"\n                  role=\"img\">\n                </svg>\n                {/* <h1 className=\"title\">NFT</h1> */}\n                <div class=\"card\">\n                  <img class=\"card-img-top\" src={logo} alt={\"logo\"} />\n                  <div class=\"card-body\">\n                    <h5 class=\"card-title\">{token.Name}</h5>\n                    <p class=\"card-text\">설명: {token.des} 가격: {token.cost}</p>\n                    <a href=\"/\" class=\"btn btn-primary\">구매</a>\n                  </div>\n                </div>\n              </div>\n\n\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}