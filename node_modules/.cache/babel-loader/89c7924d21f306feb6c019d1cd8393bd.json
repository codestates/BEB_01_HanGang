{"ast":null,"code":"import _regeneratorRuntime from \"/home/lhk/web3-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/lhk/web3-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/lhk/web3-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/lhk/web3-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lhk/web3-practice/src/components/Main.js\";\nimport logo from '../한강.png';\nimport React, { useEffect, useState } from \"react\";\nimport { connectWallet, getCurrentWalletConnected, mintNFT } from \"../utils/interact.js\";\nimport Web3 from 'web3';\nimport erc721Abi from \"../erc721Abi\";\nimport TokenList from \"./TokenList\";\n\nfunction Main() {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      walletAddress = _useState2[0],\n      setWallet = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      status = _useState4[0],\n      setStatus = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      description = _useState8[0],\n      setDescription = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      url = _useState10[0],\n      setURL = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      erc721list = _useState12[0],\n      setErc721list = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      newErc721addr = _useState14[0],\n      setNewErc721Addr = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      NFTlist = _useState16[0],\n      setNFTlist = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      img = _useState18[0],\n      setImg = _useState18[1];\n\n  var _useState19 = useState(),\n      _useState20 = _slicedToArray(_useState19, 2),\n      web3 = _useState20[0],\n      setWeb3 = _useState20[1]; // let NFTlist = [1,2,3,4,5,6,7,8,9,10]\n\n\n  useEffect(function () {\n    if (typeof window.ethereum !== \"undefined\") {\n      // window.ethereum이 있다면\n      try {\n        var web = new Web3(window.ethereum); // 새로운 web3 객체를 만든다\n\n        setWeb3(web);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, []);\n\n  var addNewErc721Token = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var tokenContract, name, symbol, totalSupply, addr, arr, i, _loop, _i, _arr;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return new web3.eth.Contract(erc721Abi, '0x096e91e2aeb5627e27cf724ae36cda82edc74e1c');\n\n            case 2:\n              tokenContract = _context2.sent;\n              _context2.next = 5;\n              return tokenContract.methods.name().call();\n\n            case 5:\n              name = _context2.sent;\n              _context2.next = 8;\n              return tokenContract.methods.symbol().call();\n\n            case 8:\n              symbol = _context2.sent;\n              _context2.next = 11;\n              return tokenContract.methods.totalSupply().call();\n\n            case 11:\n              totalSupply = _context2.sent;\n              addr = newErc721addr;\n              arr = [];\n\n              for (i = 1; i <= totalSupply; i++) {\n                arr.push(i);\n              }\n\n              _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop() {\n                var tokenId, tokenOwner, tokenURI;\n                return _regeneratorRuntime.wrap(function _loop$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        tokenId = _arr[_i];\n                        _context.next = 3;\n                        return tokenContract.methods.ownerOf(tokenId).call();\n\n                      case 3:\n                        tokenOwner = _context.sent;\n\n                        if (!(String(tokenOwner).toLowerCase() === '0x6FfD74BaC21Fa086d645E6407F2e9Bd19595b9e0'.toLowerCase())) {\n                          _context.next = 9;\n                          break;\n                        }\n\n                        _context.next = 7;\n                        return tokenContract.methods.tokenURI(tokenId).call();\n\n                      case 7:\n                        tokenURI = _context.sent;\n                        setErc721list(function (prevState) {\n                          return [].concat(_toConsumableArray(prevState), [{\n                            name: name,\n                            symbol: symbol,\n                            tokenId: tokenId,\n                            tokenURI: tokenURI,\n                            addr: addr\n                          }]);\n                        });\n\n                      case 9:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _loop);\n              });\n              _i = 0, _arr = arr;\n\n            case 17:\n              if (!(_i < _arr.length)) {\n                _context2.next = 22;\n                break;\n              }\n\n              return _context2.delegateYield(_loop(), \"t0\", 19);\n\n            case 19:\n              _i++;\n              _context2.next = 17;\n              break;\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function addNewErc721Token() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addNewErc721Token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"add new erc721\"), erc721list.map(function (token) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      className: \"bd-placeholder-img\",\n      width: \"100%\",\n      height: \"250\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      \"aria-label\": \"Placeholder: Image\",\n      preserveAspectRatio: \"xMidYMid slice\",\n      role: \"img\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"card-img-top\",\n      src: token.tokenURI,\n      alt: \"logo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"card-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, token.name), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"card-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"\\uC124\\uBA85: \", token.des, \" \\uAC00\\uACA9: \", token.cost), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/Auction\",\n      class: \"btn btn-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"\\uAD6C\\uB9E4\"))));\n  }))));\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/lhk/web3-practice/src/components/Main.js"],"names":["logo","React","useEffect","useState","connectWallet","getCurrentWalletConnected","mintNFT","Web3","erc721Abi","TokenList","Main","walletAddress","setWallet","status","setStatus","name","setName","description","setDescription","url","setURL","erc721list","setErc721list","newErc721addr","setNewErc721Addr","NFTlist","setNFTlist","img","setImg","web3","setWeb3","window","ethereum","web","err","console","log","addNewErc721Token","eth","Contract","tokenContract","methods","call","symbol","totalSupply","addr","arr","i","push","tokenId","ownerOf","tokenOwner","String","toLowerCase","tokenURI","prevState","map","token","des","cost"],"mappings":"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","sourcesContent":["import logo from '../한강.png';\nimport React, { useEffect, useState } from \"react\";\nimport { connectWallet, getCurrentWalletConnected, mintNFT, } from \"../utils/interact.js\";\nimport Web3 from 'web3';\nimport erc721Abi from \"../erc721Abi\"\nimport TokenList from \"./TokenList\";\n\n\nfunction Main() {\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [url, setURL] = useState(\"\");\n  const [erc721list, setErc721list] = useState([]);\n  const [newErc721addr, setNewErc721Addr] = useState();\n  const [NFTlist, setNFTlist] = useState([]);\n  const [img, setImg] = useState('')\n  const [web3, setWeb3] = useState();\n  // let NFTlist = [1,2,3,4,5,6,7,8,9,10]\n\n  useEffect(() => {\n    if (typeof window.ethereum !== \"undefined\") { // window.ethereum이 있다면\n      try {\n        const web = new Web3(window.ethereum);  // 새로운 web3 객체를 만든다\n        setWeb3(web);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, []);\n  const addNewErc721Token = async () => {\n    \n    const tokenContract = await new web3.eth.Contract(\n      erc721Abi,\n      '0x096e91e2aeb5627e27cf724ae36cda82edc74e1c'\n    );\n    const name = await tokenContract.methods.name().call();\n    const symbol = await tokenContract.methods.symbol().call();\n    const totalSupply = await tokenContract.methods.totalSupply().call();\n    const addr = newErc721addr;\n\n\n    let arr = [];\n    for (let i = 1; i <= totalSupply; i++) {\n      arr.push(i);\n    }\n    for (let tokenId of arr) {\n      let tokenOwner = await tokenContract.methods\n        .ownerOf(tokenId)\n        .call();\n      if (String(tokenOwner).toLowerCase() === '0x6FfD74BaC21Fa086d645E6407F2e9Bd19595b9e0'.toLowerCase()) {\n        let tokenURI = await tokenContract.methods\n          .tokenURI(tokenId)\n          .call();\n        setErc721list((prevState) => {\n          return [...prevState, { name, symbol, tokenId, tokenURI, addr }];\n        });\n      }\n    }\n\n  }\n\n  \n  return (\n    <div className=\"App\">\n      <div class=\"container\">\n        <div className=\"row no-gutters\">\n        <button onClick={addNewErc721Token}>add new erc721</button>\n          {erc721list.map((token) => {\n            return (\n              <div className=\"col-3\">\n                <svg\n                  className=\"bd-placeholder-img\"\n                  width=\"100%\"\n                  height=\"250\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  aria-label=\"Placeholder: Image\"\n                  preserveAspectRatio=\"xMidYMid slice\"\n                  role=\"img\">\n                </svg>\n                {/* <h1 className=\"title\">NFT</h1> */}\n                <div class=\"card\">\n                  <img class=\"card-img-top\" src={token.tokenURI} alt={\"logo\"} />\n                  <div class=\"card-body\">\n                    <h5 class=\"card-title\">{token.name}</h5>\n                    <p class=\"card-text\">설명: {token.des} 가격: {token.cost}</p>\n                    <a href=\"/Auction\" class=\"btn btn-primary\">구매</a>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}