{"ast":null,"code":"import _regeneratorRuntime from \"/home/lhk/web3-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lhk/web3-practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nrequire('dotenv').config();\n\nvar key = process.env.REACT_APP_PINATA_KEY;\nvar secret = process.env.REACT_APP_PINATA_SECRET;\n\nvar axios = require('axios');\n\nexport var pinJSONToIPFS = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(JSONBody) {\n    var url;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"https://api.pinata.cloud/pinning/pinJSONToIPFS\"; //making axios POST request to Pinata ⬇️\n\n            return _context.abrupt(\"return\", axios.post(url, JSONBody, {\n              headers: {\n                pinata_api_key: key,\n                pinata_secret_api_key: secret\n              }\n            }).then(function (response) {\n              return {\n                success: true,\n                pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\n              };\n            }).catch(function (error) {\n              console.log(error);\n              return {\n                success: false,\n                message: error.message\n              };\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function pinJSONToIPFS(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/lhk/web3-practice/src/utils/pinata.js"],"names":["require","config","key","process","env","REACT_APP_PINATA_KEY","secret","REACT_APP_PINATA_SECRET","axios","pinJSONToIPFS","JSONBody","url","post","headers","pinata_api_key","pinata_secret_api_key","then","response","success","pinataUrl","data","IpfsHash","catch","error","console","log","message"],"mappings":";;;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAAxB;AACA,IAAMC,MAAM,GAAGH,OAAO,CAACC,GAAR,CAAYG,uBAA3B;;AACA,IAAMC,KAAK,GAAGR,OAAO,CAAC,OAAD,CAArB;;AAEA,OAAO,IAAMS,aAAa;AAAA,sEAAG,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,YAAAA,GADmB,qDAEzB;;AAFyB,6CAGlBH,KAAK,CACPI,IADE,CACGD,GADH,EACQD,QADR,EACkB;AACjBG,cAAAA,OAAO,EAAE;AACLC,gBAAAA,cAAc,EAAEZ,GADX;AAELa,gBAAAA,qBAAqB,EAAET;AAFlB;AADQ,aADlB,EAOFU,IAPE,CAOG,UAAUC,QAAV,EAAoB;AACvB,qBAAO;AACHC,gBAAAA,OAAO,EAAE,IADN;AAEHC,gBAAAA,SAAS,EAAE,uCAAuCF,QAAQ,CAACG,IAAT,CAAcC;AAF7D,eAAP;AAIF,aAZE,EAaFC,KAbE,CAaI,UAAUC,KAAV,EAAiB;AACpBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,qBAAO;AACHL,gBAAAA,OAAO,EAAE,KADN;AAEHQ,gBAAAA,OAAO,EAAEH,KAAK,CAACG;AAFZ,eAAP;AAKP,aApBM,CAHkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbjB,aAAa;AAAA;AAAA;AAAA,GAAnB","sourcesContent":["require('dotenv').config();\nconst key = process.env.REACT_APP_PINATA_KEY;\nconst secret = process.env.REACT_APP_PINATA_SECRET;\nconst axios = require('axios');\n\nexport const pinJSONToIPFS = async(JSONBody) => {\n    const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`;\n    //making axios POST request to Pinata ⬇️\n    return axios \n        .post(url, JSONBody, {\n            headers: {\n                pinata_api_key: key,\n                pinata_secret_api_key: secret,\n            }\n        })\n        .then(function (response) {\n           return {\n               success: true,\n               pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\n           };\n        })\n        .catch(function (error) {\n            console.log(error)\n            return {\n                success: false,\n                message: error.message,\n            }\n\n    });\n};"]},"metadata":{},"sourceType":"module"}